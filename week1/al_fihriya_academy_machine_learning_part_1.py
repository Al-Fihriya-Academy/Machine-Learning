# -*- coding: utf-8 -*-
"""Al Fihriya Academy-Machine Learning part 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CKrSXSuvK-6bLiqlextKCd309DyJvr8J

# **مراجعة ديال الجبر الخطي**
"""

import numpy as np

"""###       الجمع"""

A = np.array([[4, 8], [3, 7]])
B = np.array([[1, 0], [5, 2]])
A+B

"""###  الطرح"""

C = np.array([[2, 8], [0, 9]])
D = np.array([[5, 6], [11, 3]])
C-D

"""### الضرب في عدد"""

A = np.array([[5, 2], [3, 1]])
A*2

2*A

"""### القسمة على عدد"""

A = np.array([[5, 2], [3, 1]])
A/2

2/A

"""### الضرب في متجهة"""

N = np.array([[4, 1], [6, 3],[2, 4]])
M = np.array([2, 5])
R = np.dot(N, M)
R

"""### ضرب مصفوفتين"""

N = np.array([[4, 1 ], [6, 3 ],[2, 4]])
M = np.array([[2, 5, 0, -5],[3, 5, -2, 4]])
R = np.dot(N, M)
R

print("The dimension of the matrix N is {}".format(N.shape))
print("The dimension of the matrix N is {}".format(M.shape))
print("The dimension of the product N*M is {}".format(R.shape))

"""### Transpose"""

N = np.array([[4, 1], [6, 3],[2, 4]])
T = N.transpose()
print("The matrix N = \n {}".format(N))
print("The transpose of the matrix N = \n {}".format(T))

print("The dimension of the matrix N is {}".format(N.shape))
print("The dimension of the transposed matrix N is {}".format(T.shape))

"""### Inverse

Case 1 : All the conditions are verified
"""

from numpy.linalg import inv,det

N = np.array([[4, 7], [2, 6]])
I = inv(N)
R = np.dot(N,I)
np.allclose(R, np.eye(2))

np.eye(2)

N

I

R

# Conditions
print("The dimension of the matrix N is {}".format(N.shape))
print("The determinent of the matrix N is {}".format(np.linalg.det(N)))

"""Case 2 : the matrix is not squared"""

M = np.array([[4, 7, 0], [2, 6, -4]])
I = inv(M)

# Conditions
print("The dimension of the matrix M is {}".format(M.shape))

"""Case 3: the determinent is equal to zero"""

# Case 3
from numpy.linalg import inv,det
A = np.array([[2, 1, 0], [-1, 2, 3], [0, 5, 6]])
I = inv(A)

# Conditions
print("The dimension of the matrix A is {}".format(A.shape))
print("The determinent of the matrix A is {}".format(np.linalg.det(A)))

"""# **علاقة المصفوفات بالتعلم الآلي**

###   Image data
"""

import cv2
from google.colab.patches import cv2_imshow

img = cv2.imread('cat.png',cv2.IMREAD_GRAYSCALE)  
cv2_imshow(img)

img

img.shape

img[330]

"""###   File data"""

import pandas as pd

data = pd.read_csv('data.csv')

data.head()

"""###   Text data"""

import numpy as np

text_data = [
             'This movie is awesome, I recommend it',
             'An empty boring movie with nothing to recommend it',
             'A truly amazing movie' 
            ]

from sklearn.feature_extraction.text import CountVectorizer

vectorizer = CountVectorizer()
counts = vectorizer.fit_transform(text_data)
print(vectorizer.get_feature_names())

print(counts.toarray())

"""# **Salina xD**"""

from IPython.display import HTML
HTML('''<div style="display: flex; justify-content: row;">
    <img src="https://media.giphy.com/media/3o6MbudLhIoFwrkTQY/giphy.gif">
</div>''')

